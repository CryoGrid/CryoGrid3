function [dE_dt_cond GRID]= heatConductionIceCover(dE_dt_cond, T, k_eff, k_temp, GRID) 

GRID.ice.dE_dt_cond_residual=0;
if ~isempty(GRID.ice.cT_domain_ub) && ~isempty(GRID.water.cT_domain_ub)
    dE_dt_cond_save = dE_dt_cond(GRID.ice.cT_domain_lb) + dE_dt_cond(GRID.ice.cT_domain_lb+1);
    
    if sum(GRID.ice.cT_domain)<2
        
        dE_dt_cond(GRID.ice.cT_domain_lb) = k_temp(GRID.ice.K_domain_lb) .* (0-T(GRID.ice.cT_domain_lb)) ...
            ./ GRID.general.K_delta(GRID.ice.K_domain_lb)./2;
    else
        
        dE_dt_cond(GRID.ice.cT_domain_lb) = k_temp(GRID.ice.K_domain_lb) .* (0-T(GRID.ice.cT_domain_lb)) ...
            ./ GRID.general.K_delta(GRID.ice.K_domain_lb)./2 ...
            - ...
            k_eff(GRID.ice.cT_domain_ub-1) .* (T(GRID.ice.cT_domain_lb)-T(GRID.ice.cT_domain_ub-1)) ...
            ./ GRID.general.cT_delta(GRID.ice.cT_domain_ub-1);
    end
    
    dE_dt_cond(GRID.ice.cT_domain_lb+1) = k_eff(GRID.ice.cT_domain_lb+2).*(T(GRID.ice.cT_domain_lb+2)-T(GRID.ice.cT_domain_lb+1)) ...
        ./ GRID.general.cT_delta(GRID.ice.cT_domain_lb+2) ...
        - ...
        k_temp(GRID.ice.K_domain_lb+1) .* (T(GRID.ice.cT_domain_lb+1)-0) ...
        ./  GRID.general.K_delta(GRID.ice.K_domain_lb+1)./2;
    
    %residual heat flux used for ice cover
    GRID.ice.dE_dt_cond_residual = dE_dt_cond_save - (dE_dt_cond(GRID.ice.cT_domain_lb) + dE_dt_cond(GRID.ice.cT_domain_lb+1));
end